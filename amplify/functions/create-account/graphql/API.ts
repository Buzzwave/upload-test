/* tslint:disable */
/* eslint-disable */
//  This file was automatically generated and should not be edited.

export type Campaign = {
  __typename: "Campaign",
  campaignId: string,
  campaignStatus?: CampaignCampaignStatus | null,
  clientAccountId: string,
  confirmationPageUrl?: string | null,
  createdAt: string,
  createdBy: string,
  description?: string | null,
  disabled?: boolean | null,
  event?: Event | null,
  eventId: string,
  modalButtonText?: string | null,
  modalDomainPath?: string | null,
  modalIncentiveTCs?: string | null,
  modalIncentiveText?: string | null,
  modalPattern?: string | null,
  modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
  modalText?: string | null,
  modalTitle?: string | null,
  name?: string | null,
  postForwardUrl?: string | null,
  postImageUrl?: string | null,
  postText?: string | null,
  readGroups?: Array< string | null > | null,
  registrationPageUrl?: string | null,
  targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
  updatedAt: string,
  updatedBy: string,
  valueOfAcquisition?: number | null,
  valueOfClick?: number | null,
  valueOfPost?: number | null,
  writeGroups?: Array< string | null > | null,
};

export enum CampaignCampaignStatus {
  Active = "Active",
  Completed = "Completed",
  Deleted = "Deleted",
  Draft = "Draft",
  Inactive = "Inactive",
}


export type Event = {
  __typename: "Event",
  campaigns?: ModelCampaignConnection | null,
  clientAccount?: ClientAccount | null,
  clientAccountId: string,
  closingDate: string,
  createdAt: string,
  createdBy: string,
  description?: string | null,
  disabled?: boolean | null,
  eventId: string,
  location?: string | null,
  logoImageUrl: string,
  name: string,
  openingDate: string,
  readGroups?: Array< string | null > | null,
  updatedAt: string,
  updatedBy: string,
  websiteUrl?: string | null,
  writeGroups?: Array< string | null > | null,
};

export type ModelCampaignConnection = {
  __typename: "ModelCampaignConnection",
  items:  Array<Campaign | null >,
  nextToken?: string | null,
};

export type ClientAccount = {
  __typename: "ClientAccount",
  address1?: string | null,
  address2?: string | null,
  annualEventCount: string,
  averageEventAttendance: string,
  city?: string | null,
  clientAccountId: string,
  companyName: string,
  country?: string | null,
  createdAt: string,
  createdBy: string,
  currencyCode: string,
  disabled?: boolean | null,
  events?: ModelEventConnection | null,
  industry: string,
  licenseKey?: string | null,
  licenseKeyValidUntil?: string | null,
  readGroups?: Array< string | null > | null,
  state?: string | null,
  updatedAt: string,
  updatedBy: string,
  users?: ModelUserConnection | null,
  writeGroups?: Array< string | null > | null,
  zip?: string | null,
};

export type ModelEventConnection = {
  __typename: "ModelEventConnection",
  items:  Array<Event | null >,
  nextToken?: string | null,
};

export type ModelUserConnection = {
  __typename: "ModelUserConnection",
  items:  Array<User | null >,
  nextToken?: string | null,
};

export type User = {
  __typename: "User",
  clientAccount?: ClientAccount | null,
  clientAccountId: string,
  createdAt: string,
  createdBy: string,
  disabled?: boolean | null,
  email: string,
  familyName: string,
  givenName: string,
  jobTitle: string,
  mobilePhone: string,
  mobilePhoneCountryCode: string,
  owner: string,
  updatedAt: string,
  updatedBy: string,
  userId: string,
};

export enum CampaignModalPatternLocationEnum {
  Contains = "Contains",
  Endswith = "Endswith",
  Equals = "Equals",
  Regex = "Regex",
}


export enum CampaignTargetInfluencerTypeEnum {
  Any = "Any",
  Attendee = "Attendee",
  Exhibitor = "Exhibitor",
  Other = "Other",
  Speaker = "Speaker",
  Sponsor = "Sponsor",
}


export type ErrorLog = {
  __typename: "ErrorLog",
  awsRequestId?: string | null,
  campaignId?: string | null,
  clientAccountId?: string | null,
  createdAt: string,
  createdBy: string,
  disabled?: boolean | null,
  errorLogId: string,
  errorMessage?: string | null,
  functionName?: string | null,
  metadata?: string | null,
  readGroups?: Array< string | null > | null,
  stack?: string | null,
  updatedAt: string,
  updatedBy: string,
  writeGroups?: Array< string | null > | null,
};

export type ModelCampaignFilterInput = {
  and?: Array< ModelCampaignFilterInput | null > | null,
  campaignId?: ModelIDInput | null,
  campaignStatus?: ModelCampaignCampaignStatusInput | null,
  clientAccountId?: ModelIDInput | null,
  confirmationPageUrl?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  createdBy?: ModelStringInput | null,
  description?: ModelStringInput | null,
  disabled?: ModelBooleanInput | null,
  eventId?: ModelIDInput | null,
  id?: ModelIDInput | null,
  modalButtonText?: ModelStringInput | null,
  modalDomainPath?: ModelStringInput | null,
  modalIncentiveTCs?: ModelStringInput | null,
  modalIncentiveText?: ModelStringInput | null,
  modalPattern?: ModelStringInput | null,
  modalPatternLocationEnum?: ModelCampaignModalPatternLocationEnumInput | null,
  modalText?: ModelStringInput | null,
  modalTitle?: ModelStringInput | null,
  name?: ModelStringInput | null,
  not?: ModelCampaignFilterInput | null,
  or?: Array< ModelCampaignFilterInput | null > | null,
  postForwardUrl?: ModelStringInput | null,
  postImageUrl?: ModelStringInput | null,
  postText?: ModelStringInput | null,
  readGroups?: ModelStringInput | null,
  registrationPageUrl?: ModelStringInput | null,
  targetInfluencerTypeEnum?: ModelCampaignTargetInfluencerTypeEnumInput | null,
  updatedAt?: ModelStringInput | null,
  updatedBy?: ModelStringInput | null,
  valueOfAcquisition?: ModelFloatInput | null,
  valueOfClick?: ModelFloatInput | null,
  valueOfPost?: ModelFloatInput | null,
  writeGroups?: ModelStringInput | null,
};

export type ModelIDInput = {
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
  beginsWith?: string | null,
  between?: Array< string | null > | null,
  contains?: string | null,
  eq?: string | null,
  ge?: string | null,
  gt?: string | null,
  le?: string | null,
  lt?: string | null,
  ne?: string | null,
  notContains?: string | null,
  size?: ModelSizeInput | null,
};

export enum ModelAttributeTypes {
  _null = "_null",
  binary = "binary",
  binarySet = "binarySet",
  bool = "bool",
  list = "list",
  map = "map",
  number = "number",
  numberSet = "numberSet",
  string = "string",
  stringSet = "stringSet",
}


export type ModelSizeInput = {
  between?: Array< number | null > | null,
  eq?: number | null,
  ge?: number | null,
  gt?: number | null,
  le?: number | null,
  lt?: number | null,
  ne?: number | null,
};

export type ModelCampaignCampaignStatusInput = {
  eq?: CampaignCampaignStatus | null,
  ne?: CampaignCampaignStatus | null,
};

export type ModelStringInput = {
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
  beginsWith?: string | null,
  between?: Array< string | null > | null,
  contains?: string | null,
  eq?: string | null,
  ge?: string | null,
  gt?: string | null,
  le?: string | null,
  lt?: string | null,
  ne?: string | null,
  notContains?: string | null,
  size?: ModelSizeInput | null,
};

export type ModelBooleanInput = {
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
  eq?: boolean | null,
  ne?: boolean | null,
};

export type ModelCampaignModalPatternLocationEnumInput = {
  eq?: CampaignModalPatternLocationEnum | null,
  ne?: CampaignModalPatternLocationEnum | null,
};

export type ModelCampaignTargetInfluencerTypeEnumInput = {
  eq?: CampaignTargetInfluencerTypeEnum | null,
  ne?: CampaignTargetInfluencerTypeEnum | null,
};

export type ModelFloatInput = {
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
  between?: Array< number | null > | null,
  eq?: number | null,
  ge?: number | null,
  gt?: number | null,
  le?: number | null,
  lt?: number | null,
  ne?: number | null,
};

export enum ModelSortDirection {
  ASC = "ASC",
  DESC = "DESC",
}


export type ModelClientAccountFilterInput = {
  address1?: ModelStringInput | null,
  address2?: ModelStringInput | null,
  and?: Array< ModelClientAccountFilterInput | null > | null,
  annualEventCount?: ModelStringInput | null,
  averageEventAttendance?: ModelStringInput | null,
  city?: ModelStringInput | null,
  clientAccountId?: ModelIDInput | null,
  companyName?: ModelStringInput | null,
  country?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  createdBy?: ModelStringInput | null,
  currencyCode?: ModelStringInput | null,
  disabled?: ModelBooleanInput | null,
  id?: ModelIDInput | null,
  industry?: ModelStringInput | null,
  licenseKey?: ModelStringInput | null,
  licenseKeyValidUntil?: ModelStringInput | null,
  not?: ModelClientAccountFilterInput | null,
  or?: Array< ModelClientAccountFilterInput | null > | null,
  readGroups?: ModelStringInput | null,
  state?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  updatedBy?: ModelStringInput | null,
  writeGroups?: ModelStringInput | null,
  zip?: ModelStringInput | null,
};

export type ModelClientAccountConnection = {
  __typename: "ModelClientAccountConnection",
  items:  Array<ClientAccount | null >,
  nextToken?: string | null,
};

export type ModelErrorLogFilterInput = {
  and?: Array< ModelErrorLogFilterInput | null > | null,
  awsRequestId?: ModelStringInput | null,
  campaignId?: ModelStringInput | null,
  clientAccountId?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  createdBy?: ModelStringInput | null,
  disabled?: ModelBooleanInput | null,
  errorLogId?: ModelStringInput | null,
  errorMessage?: ModelStringInput | null,
  functionName?: ModelStringInput | null,
  id?: ModelIDInput | null,
  metadata?: ModelStringInput | null,
  not?: ModelErrorLogFilterInput | null,
  or?: Array< ModelErrorLogFilterInput | null > | null,
  readGroups?: ModelStringInput | null,
  stack?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  updatedBy?: ModelStringInput | null,
  writeGroups?: ModelStringInput | null,
};

export type ModelErrorLogConnection = {
  __typename: "ModelErrorLogConnection",
  items:  Array<ErrorLog | null >,
  nextToken?: string | null,
};

export type ModelEventFilterInput = {
  and?: Array< ModelEventFilterInput | null > | null,
  clientAccountId?: ModelIDInput | null,
  closingDate?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  createdBy?: ModelStringInput | null,
  description?: ModelStringInput | null,
  disabled?: ModelBooleanInput | null,
  eventId?: ModelIDInput | null,
  id?: ModelIDInput | null,
  location?: ModelStringInput | null,
  logoImageUrl?: ModelStringInput | null,
  name?: ModelStringInput | null,
  not?: ModelEventFilterInput | null,
  openingDate?: ModelStringInput | null,
  or?: Array< ModelEventFilterInput | null > | null,
  readGroups?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  updatedBy?: ModelStringInput | null,
  websiteUrl?: ModelStringInput | null,
  writeGroups?: ModelStringInput | null,
};

export type ModelUserFilterInput = {
  and?: Array< ModelUserFilterInput | null > | null,
  clientAccountId?: ModelIDInput | null,
  createdAt?: ModelStringInput | null,
  createdBy?: ModelStringInput | null,
  disabled?: ModelBooleanInput | null,
  email?: ModelStringInput | null,
  familyName?: ModelStringInput | null,
  givenName?: ModelStringInput | null,
  id?: ModelIDInput | null,
  jobTitle?: ModelStringInput | null,
  mobilePhone?: ModelStringInput | null,
  mobilePhoneCountryCode?: ModelStringInput | null,
  not?: ModelUserFilterInput | null,
  or?: Array< ModelUserFilterInput | null > | null,
  owner?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  updatedBy?: ModelStringInput | null,
  userId?: ModelIDInput | null,
};

export type ModelCampaignConditionInput = {
  and?: Array< ModelCampaignConditionInput | null > | null,
  campaignStatus?: ModelCampaignCampaignStatusInput | null,
  clientAccountId?: ModelIDInput | null,
  confirmationPageUrl?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  createdBy?: ModelStringInput | null,
  description?: ModelStringInput | null,
  disabled?: ModelBooleanInput | null,
  eventId?: ModelIDInput | null,
  modalButtonText?: ModelStringInput | null,
  modalDomainPath?: ModelStringInput | null,
  modalIncentiveTCs?: ModelStringInput | null,
  modalIncentiveText?: ModelStringInput | null,
  modalPattern?: ModelStringInput | null,
  modalPatternLocationEnum?: ModelCampaignModalPatternLocationEnumInput | null,
  modalText?: ModelStringInput | null,
  modalTitle?: ModelStringInput | null,
  name?: ModelStringInput | null,
  not?: ModelCampaignConditionInput | null,
  or?: Array< ModelCampaignConditionInput | null > | null,
  postForwardUrl?: ModelStringInput | null,
  postImageUrl?: ModelStringInput | null,
  postText?: ModelStringInput | null,
  readGroups?: ModelStringInput | null,
  registrationPageUrl?: ModelStringInput | null,
  targetInfluencerTypeEnum?: ModelCampaignTargetInfluencerTypeEnumInput | null,
  updatedAt?: ModelStringInput | null,
  updatedBy?: ModelStringInput | null,
  valueOfAcquisition?: ModelFloatInput | null,
  valueOfClick?: ModelFloatInput | null,
  valueOfPost?: ModelFloatInput | null,
  writeGroups?: ModelStringInput | null,
};

export type CreateCampaignInput = {
  campaignId: string,
  campaignStatus?: CampaignCampaignStatus | null,
  clientAccountId: string,
  confirmationPageUrl?: string | null,
  createdBy: string,
  description?: string | null,
  disabled?: boolean | null,
  eventId: string,
  modalButtonText?: string | null,
  modalDomainPath?: string | null,
  modalIncentiveTCs?: string | null,
  modalIncentiveText?: string | null,
  modalPattern?: string | null,
  modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
  modalText?: string | null,
  modalTitle?: string | null,
  name?: string | null,
  postForwardUrl?: string | null,
  postImageUrl?: string | null,
  postText?: string | null,
  readGroups?: Array< string | null > | null,
  registrationPageUrl?: string | null,
  targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
  updatedBy: string,
  valueOfAcquisition?: number | null,
  valueOfClick?: number | null,
  valueOfPost?: number | null,
  writeGroups?: Array< string | null > | null,
};

export type ModelClientAccountConditionInput = {
  address1?: ModelStringInput | null,
  address2?: ModelStringInput | null,
  and?: Array< ModelClientAccountConditionInput | null > | null,
  annualEventCount?: ModelStringInput | null,
  averageEventAttendance?: ModelStringInput | null,
  city?: ModelStringInput | null,
  companyName?: ModelStringInput | null,
  country?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  createdBy?: ModelStringInput | null,
  currencyCode?: ModelStringInput | null,
  disabled?: ModelBooleanInput | null,
  industry?: ModelStringInput | null,
  licenseKey?: ModelStringInput | null,
  licenseKeyValidUntil?: ModelStringInput | null,
  not?: ModelClientAccountConditionInput | null,
  or?: Array< ModelClientAccountConditionInput | null > | null,
  readGroups?: ModelStringInput | null,
  state?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  updatedBy?: ModelStringInput | null,
  writeGroups?: ModelStringInput | null,
  zip?: ModelStringInput | null,
};

export type CreateClientAccountInput = {
  address1?: string | null,
  address2?: string | null,
  annualEventCount: string,
  averageEventAttendance: string,
  city?: string | null,
  clientAccountId: string,
  companyName: string,
  country?: string | null,
  createdBy: string,
  currencyCode: string,
  disabled?: boolean | null,
  industry: string,
  licenseKey?: string | null,
  licenseKeyValidUntil?: string | null,
  readGroups?: Array< string | null > | null,
  state?: string | null,
  updatedBy: string,
  writeGroups?: Array< string | null > | null,
  zip?: string | null,
};

export type ModelErrorLogConditionInput = {
  and?: Array< ModelErrorLogConditionInput | null > | null,
  awsRequestId?: ModelStringInput | null,
  campaignId?: ModelStringInput | null,
  clientAccountId?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  createdBy?: ModelStringInput | null,
  disabled?: ModelBooleanInput | null,
  errorMessage?: ModelStringInput | null,
  functionName?: ModelStringInput | null,
  metadata?: ModelStringInput | null,
  not?: ModelErrorLogConditionInput | null,
  or?: Array< ModelErrorLogConditionInput | null > | null,
  readGroups?: ModelStringInput | null,
  stack?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  updatedBy?: ModelStringInput | null,
  writeGroups?: ModelStringInput | null,
};

export type CreateErrorLogInput = {
  awsRequestId?: string | null,
  campaignId?: string | null,
  clientAccountId?: string | null,
  createdBy: string,
  disabled?: boolean | null,
  errorLogId: string,
  errorMessage?: string | null,
  functionName?: string | null,
  metadata?: string | null,
  readGroups?: Array< string | null > | null,
  stack?: string | null,
  updatedBy: string,
  writeGroups?: Array< string | null > | null,
};

export type ModelEventConditionInput = {
  and?: Array< ModelEventConditionInput | null > | null,
  clientAccountId?: ModelIDInput | null,
  closingDate?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  createdBy?: ModelStringInput | null,
  description?: ModelStringInput | null,
  disabled?: ModelBooleanInput | null,
  location?: ModelStringInput | null,
  logoImageUrl?: ModelStringInput | null,
  name?: ModelStringInput | null,
  not?: ModelEventConditionInput | null,
  openingDate?: ModelStringInput | null,
  or?: Array< ModelEventConditionInput | null > | null,
  readGroups?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  updatedBy?: ModelStringInput | null,
  websiteUrl?: ModelStringInput | null,
  writeGroups?: ModelStringInput | null,
};

export type CreateEventInput = {
  clientAccountId: string,
  closingDate: string,
  createdBy: string,
  description?: string | null,
  disabled?: boolean | null,
  eventId: string,
  location?: string | null,
  logoImageUrl: string,
  name: string,
  openingDate: string,
  readGroups?: Array< string | null > | null,
  updatedBy: string,
  websiteUrl?: string | null,
  writeGroups?: Array< string | null > | null,
};

export type ModelUserConditionInput = {
  and?: Array< ModelUserConditionInput | null > | null,
  clientAccountId?: ModelIDInput | null,
  createdAt?: ModelStringInput | null,
  createdBy?: ModelStringInput | null,
  disabled?: ModelBooleanInput | null,
  email?: ModelStringInput | null,
  familyName?: ModelStringInput | null,
  givenName?: ModelStringInput | null,
  jobTitle?: ModelStringInput | null,
  mobilePhone?: ModelStringInput | null,
  mobilePhoneCountryCode?: ModelStringInput | null,
  not?: ModelUserConditionInput | null,
  or?: Array< ModelUserConditionInput | null > | null,
  owner?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  updatedBy?: ModelStringInput | null,
};

export type CreateUserInput = {
  clientAccountId: string,
  createdBy: string,
  disabled?: boolean | null,
  email: string,
  familyName: string,
  givenName: string,
  jobTitle: string,
  mobilePhone: string,
  mobilePhoneCountryCode: string,
  owner: string,
  updatedBy: string,
  userId: string,
};

export type DeleteCampaignInput = {
  campaignId: string,
};

export type DeleteClientAccountInput = {
  clientAccountId: string,
};

export type DeleteErrorLogInput = {
  errorLogId: string,
};

export type DeleteEventInput = {
  eventId: string,
};

export type DeleteUserInput = {
  userId: string,
};

export type UpdateCampaignInput = {
  campaignId: string,
  campaignStatus?: CampaignCampaignStatus | null,
  clientAccountId?: string | null,
  confirmationPageUrl?: string | null,
  createdBy?: string | null,
  description?: string | null,
  disabled?: boolean | null,
  eventId?: string | null,
  modalButtonText?: string | null,
  modalDomainPath?: string | null,
  modalIncentiveTCs?: string | null,
  modalIncentiveText?: string | null,
  modalPattern?: string | null,
  modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
  modalText?: string | null,
  modalTitle?: string | null,
  name?: string | null,
  postForwardUrl?: string | null,
  postImageUrl?: string | null,
  postText?: string | null,
  readGroups?: Array< string | null > | null,
  registrationPageUrl?: string | null,
  targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
  updatedBy?: string | null,
  valueOfAcquisition?: number | null,
  valueOfClick?: number | null,
  valueOfPost?: number | null,
  writeGroups?: Array< string | null > | null,
};

export type UpdateClientAccountInput = {
  address1?: string | null,
  address2?: string | null,
  annualEventCount?: string | null,
  averageEventAttendance?: string | null,
  city?: string | null,
  clientAccountId: string,
  companyName?: string | null,
  country?: string | null,
  createdBy?: string | null,
  currencyCode?: string | null,
  disabled?: boolean | null,
  industry?: string | null,
  licenseKey?: string | null,
  licenseKeyValidUntil?: string | null,
  readGroups?: Array< string | null > | null,
  state?: string | null,
  updatedBy?: string | null,
  writeGroups?: Array< string | null > | null,
  zip?: string | null,
};

export type UpdateErrorLogInput = {
  awsRequestId?: string | null,
  campaignId?: string | null,
  clientAccountId?: string | null,
  createdBy?: string | null,
  disabled?: boolean | null,
  errorLogId: string,
  errorMessage?: string | null,
  functionName?: string | null,
  metadata?: string | null,
  readGroups?: Array< string | null > | null,
  stack?: string | null,
  updatedBy?: string | null,
  writeGroups?: Array< string | null > | null,
};

export type UpdateEventInput = {
  clientAccountId?: string | null,
  closingDate?: string | null,
  createdBy?: string | null,
  description?: string | null,
  disabled?: boolean | null,
  eventId: string,
  location?: string | null,
  logoImageUrl?: string | null,
  name?: string | null,
  openingDate?: string | null,
  readGroups?: Array< string | null > | null,
  updatedBy?: string | null,
  websiteUrl?: string | null,
  writeGroups?: Array< string | null > | null,
};

export type UpdateUserInput = {
  clientAccountId?: string | null,
  createdBy?: string | null,
  disabled?: boolean | null,
  email?: string | null,
  familyName?: string | null,
  givenName?: string | null,
  jobTitle?: string | null,
  mobilePhone?: string | null,
  mobilePhoneCountryCode?: string | null,
  owner?: string | null,
  updatedBy?: string | null,
  userId: string,
};

export type ModelSubscriptionCampaignFilterInput = {
  and?: Array< ModelSubscriptionCampaignFilterInput | null > | null,
  campaignId?: ModelSubscriptionIDInput | null,
  campaignStatus?: ModelSubscriptionStringInput | null,
  clientAccountId?: ModelSubscriptionIDInput | null,
  confirmationPageUrl?: ModelSubscriptionStringInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  createdBy?: ModelSubscriptionStringInput | null,
  description?: ModelSubscriptionStringInput | null,
  disabled?: ModelSubscriptionBooleanInput | null,
  eventId?: ModelSubscriptionIDInput | null,
  id?: ModelSubscriptionIDInput | null,
  modalButtonText?: ModelSubscriptionStringInput | null,
  modalDomainPath?: ModelSubscriptionStringInput | null,
  modalIncentiveTCs?: ModelSubscriptionStringInput | null,
  modalIncentiveText?: ModelSubscriptionStringInput | null,
  modalPattern?: ModelSubscriptionStringInput | null,
  modalPatternLocationEnum?: ModelSubscriptionStringInput | null,
  modalText?: ModelSubscriptionStringInput | null,
  modalTitle?: ModelSubscriptionStringInput | null,
  name?: ModelSubscriptionStringInput | null,
  or?: Array< ModelSubscriptionCampaignFilterInput | null > | null,
  postForwardUrl?: ModelSubscriptionStringInput | null,
  postImageUrl?: ModelSubscriptionStringInput | null,
  postText?: ModelSubscriptionStringInput | null,
  registrationPageUrl?: ModelSubscriptionStringInput | null,
  targetInfluencerTypeEnum?: ModelSubscriptionStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  updatedBy?: ModelSubscriptionStringInput | null,
  valueOfAcquisition?: ModelSubscriptionFloatInput | null,
  valueOfClick?: ModelSubscriptionFloatInput | null,
  valueOfPost?: ModelSubscriptionFloatInput | null,
};

export type ModelSubscriptionIDInput = {
  beginsWith?: string | null,
  between?: Array< string | null > | null,
  contains?: string | null,
  eq?: string | null,
  ge?: string | null,
  gt?: string | null,
  in?: Array< string | null > | null,
  le?: string | null,
  lt?: string | null,
  ne?: string | null,
  notContains?: string | null,
  notIn?: Array< string | null > | null,
};

export type ModelSubscriptionStringInput = {
  beginsWith?: string | null,
  between?: Array< string | null > | null,
  contains?: string | null,
  eq?: string | null,
  ge?: string | null,
  gt?: string | null,
  in?: Array< string | null > | null,
  le?: string | null,
  lt?: string | null,
  ne?: string | null,
  notContains?: string | null,
  notIn?: Array< string | null > | null,
};

export type ModelSubscriptionBooleanInput = {
  eq?: boolean | null,
  ne?: boolean | null,
};

export type ModelSubscriptionFloatInput = {
  between?: Array< number | null > | null,
  eq?: number | null,
  ge?: number | null,
  gt?: number | null,
  in?: Array< number | null > | null,
  le?: number | null,
  lt?: number | null,
  ne?: number | null,
  notIn?: Array< number | null > | null,
};

export type ModelSubscriptionClientAccountFilterInput = {
  address1?: ModelSubscriptionStringInput | null,
  address2?: ModelSubscriptionStringInput | null,
  and?: Array< ModelSubscriptionClientAccountFilterInput | null > | null,
  annualEventCount?: ModelSubscriptionStringInput | null,
  averageEventAttendance?: ModelSubscriptionStringInput | null,
  city?: ModelSubscriptionStringInput | null,
  clientAccountId?: ModelSubscriptionIDInput | null,
  companyName?: ModelSubscriptionStringInput | null,
  country?: ModelSubscriptionStringInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  createdBy?: ModelSubscriptionStringInput | null,
  currencyCode?: ModelSubscriptionStringInput | null,
  disabled?: ModelSubscriptionBooleanInput | null,
  id?: ModelSubscriptionIDInput | null,
  industry?: ModelSubscriptionStringInput | null,
  licenseKey?: ModelSubscriptionStringInput | null,
  licenseKeyValidUntil?: ModelSubscriptionStringInput | null,
  or?: Array< ModelSubscriptionClientAccountFilterInput | null > | null,
  state?: ModelSubscriptionStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  updatedBy?: ModelSubscriptionStringInput | null,
  zip?: ModelSubscriptionStringInput | null,
};

export type ModelSubscriptionErrorLogFilterInput = {
  and?: Array< ModelSubscriptionErrorLogFilterInput | null > | null,
  awsRequestId?: ModelSubscriptionStringInput | null,
  campaignId?: ModelSubscriptionStringInput | null,
  clientAccountId?: ModelSubscriptionStringInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  createdBy?: ModelSubscriptionStringInput | null,
  disabled?: ModelSubscriptionBooleanInput | null,
  errorLogId?: ModelSubscriptionStringInput | null,
  errorMessage?: ModelSubscriptionStringInput | null,
  functionName?: ModelSubscriptionStringInput | null,
  id?: ModelSubscriptionIDInput | null,
  metadata?: ModelSubscriptionStringInput | null,
  or?: Array< ModelSubscriptionErrorLogFilterInput | null > | null,
  readGroups?: ModelSubscriptionStringInput | null,
  stack?: ModelSubscriptionStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  updatedBy?: ModelSubscriptionStringInput | null,
  writeGroups?: ModelSubscriptionStringInput | null,
};

export type ModelSubscriptionEventFilterInput = {
  and?: Array< ModelSubscriptionEventFilterInput | null > | null,
  clientAccountId?: ModelSubscriptionIDInput | null,
  closingDate?: ModelSubscriptionStringInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  createdBy?: ModelSubscriptionStringInput | null,
  description?: ModelSubscriptionStringInput | null,
  disabled?: ModelSubscriptionBooleanInput | null,
  eventId?: ModelSubscriptionIDInput | null,
  id?: ModelSubscriptionIDInput | null,
  location?: ModelSubscriptionStringInput | null,
  logoImageUrl?: ModelSubscriptionStringInput | null,
  name?: ModelSubscriptionStringInput | null,
  openingDate?: ModelSubscriptionStringInput | null,
  or?: Array< ModelSubscriptionEventFilterInput | null > | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  updatedBy?: ModelSubscriptionStringInput | null,
  websiteUrl?: ModelSubscriptionStringInput | null,
};

export type ModelSubscriptionUserFilterInput = {
  and?: Array< ModelSubscriptionUserFilterInput | null > | null,
  clientAccountId?: ModelSubscriptionIDInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  createdBy?: ModelSubscriptionStringInput | null,
  disabled?: ModelSubscriptionBooleanInput | null,
  email?: ModelSubscriptionStringInput | null,
  familyName?: ModelSubscriptionStringInput | null,
  givenName?: ModelSubscriptionStringInput | null,
  id?: ModelSubscriptionIDInput | null,
  jobTitle?: ModelSubscriptionStringInput | null,
  mobilePhone?: ModelSubscriptionStringInput | null,
  mobilePhoneCountryCode?: ModelSubscriptionStringInput | null,
  or?: Array< ModelSubscriptionUserFilterInput | null > | null,
  owner?: ModelStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  updatedBy?: ModelSubscriptionStringInput | null,
  userId?: ModelSubscriptionIDInput | null,
};

export type GetCampaignQueryVariables = {
  campaignId: string,
};

export type GetCampaignQuery = {
  getCampaign?:  {
    __typename: "Campaign",
    campaignId: string,
    campaignStatus?: CampaignCampaignStatus | null,
    clientAccountId: string,
    confirmationPageUrl?: string | null,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    event?:  {
      __typename: "Event",
      clientAccountId: string,
      closingDate: string,
      createdAt: string,
      createdBy: string,
      description?: string | null,
      disabled?: boolean | null,
      eventId: string,
      location?: string | null,
      logoImageUrl: string,
      name: string,
      openingDate: string,
      readGroups?: Array< string | null > | null,
      updatedAt: string,
      updatedBy: string,
      websiteUrl?: string | null,
      writeGroups?: Array< string | null > | null,
    } | null,
    eventId: string,
    modalButtonText?: string | null,
    modalDomainPath?: string | null,
    modalIncentiveTCs?: string | null,
    modalIncentiveText?: string | null,
    modalPattern?: string | null,
    modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
    modalText?: string | null,
    modalTitle?: string | null,
    name?: string | null,
    postForwardUrl?: string | null,
    postImageUrl?: string | null,
    postText?: string | null,
    readGroups?: Array< string | null > | null,
    registrationPageUrl?: string | null,
    targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
    updatedAt: string,
    updatedBy: string,
    valueOfAcquisition?: number | null,
    valueOfClick?: number | null,
    valueOfPost?: number | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type GetClientAccountQueryVariables = {
  clientAccountId: string,
};

export type GetClientAccountQuery = {
  getClientAccount?:  {
    __typename: "ClientAccount",
    address1?: string | null,
    address2?: string | null,
    annualEventCount: string,
    averageEventAttendance: string,
    city?: string | null,
    clientAccountId: string,
    companyName: string,
    country?: string | null,
    createdAt: string,
    createdBy: string,
    currencyCode: string,
    disabled?: boolean | null,
    events?:  {
      __typename: "ModelEventConnection",
      nextToken?: string | null,
    } | null,
    industry: string,
    licenseKey?: string | null,
    licenseKeyValidUntil?: string | null,
    readGroups?: Array< string | null > | null,
    state?: string | null,
    updatedAt: string,
    updatedBy: string,
    users?:  {
      __typename: "ModelUserConnection",
      nextToken?: string | null,
    } | null,
    writeGroups?: Array< string | null > | null,
    zip?: string | null,
  } | null,
};

export type GetErrorLogQueryVariables = {
  errorLogId: string,
};

export type GetErrorLogQuery = {
  getErrorLog?:  {
    __typename: "ErrorLog",
    awsRequestId?: string | null,
    campaignId?: string | null,
    clientAccountId?: string | null,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    errorLogId: string,
    errorMessage?: string | null,
    functionName?: string | null,
    metadata?: string | null,
    readGroups?: Array< string | null > | null,
    stack?: string | null,
    updatedAt: string,
    updatedBy: string,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type GetEventQueryVariables = {
  eventId: string,
};

export type GetEventQuery = {
  getEvent?:  {
    __typename: "Event",
    campaigns?:  {
      __typename: "ModelCampaignConnection",
      nextToken?: string | null,
    } | null,
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    closingDate: string,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    eventId: string,
    location?: string | null,
    logoImageUrl: string,
    name: string,
    openingDate: string,
    readGroups?: Array< string | null > | null,
    updatedAt: string,
    updatedBy: string,
    websiteUrl?: string | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type GetUserQueryVariables = {
  userId: string,
};

export type GetUserQuery = {
  getUser?:  {
    __typename: "User",
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    email: string,
    familyName: string,
    givenName: string,
    jobTitle: string,
    mobilePhone: string,
    mobilePhoneCountryCode: string,
    owner: string,
    updatedAt: string,
    updatedBy: string,
    userId: string,
  } | null,
};

export type ListCampaignsQueryVariables = {
  campaignId?: string | null,
  filter?: ModelCampaignFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  sortDirection?: ModelSortDirection | null,
};

export type ListCampaignsQuery = {
  listCampaigns?:  {
    __typename: "ModelCampaignConnection",
    items:  Array< {
      __typename: "Campaign",
      campaignId: string,
      campaignStatus?: CampaignCampaignStatus | null,
      clientAccountId: string,
      confirmationPageUrl?: string | null,
      createdAt: string,
      createdBy: string,
      description?: string | null,
      disabled?: boolean | null,
      eventId: string,
      modalButtonText?: string | null,
      modalDomainPath?: string | null,
      modalIncentiveTCs?: string | null,
      modalIncentiveText?: string | null,
      modalPattern?: string | null,
      modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
      modalText?: string | null,
      modalTitle?: string | null,
      name?: string | null,
      postForwardUrl?: string | null,
      postImageUrl?: string | null,
      postText?: string | null,
      readGroups?: Array< string | null > | null,
      registrationPageUrl?: string | null,
      targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
      updatedAt: string,
      updatedBy: string,
      valueOfAcquisition?: number | null,
      valueOfClick?: number | null,
      valueOfPost?: number | null,
      writeGroups?: Array< string | null > | null,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type ListClientAccountsQueryVariables = {
  clientAccountId?: string | null,
  filter?: ModelClientAccountFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  sortDirection?: ModelSortDirection | null,
};

export type ListClientAccountsQuery = {
  listClientAccounts?:  {
    __typename: "ModelClientAccountConnection",
    items:  Array< {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type ListErrorLogsQueryVariables = {
  errorLogId?: string | null,
  filter?: ModelErrorLogFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  sortDirection?: ModelSortDirection | null,
};

export type ListErrorLogsQuery = {
  listErrorLogs?:  {
    __typename: "ModelErrorLogConnection",
    items:  Array< {
      __typename: "ErrorLog",
      awsRequestId?: string | null,
      campaignId?: string | null,
      clientAccountId?: string | null,
      createdAt: string,
      createdBy: string,
      disabled?: boolean | null,
      errorLogId: string,
      errorMessage?: string | null,
      functionName?: string | null,
      metadata?: string | null,
      readGroups?: Array< string | null > | null,
      stack?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type ListEventsQueryVariables = {
  eventId?: string | null,
  filter?: ModelEventFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  sortDirection?: ModelSortDirection | null,
};

export type ListEventsQuery = {
  listEvents?:  {
    __typename: "ModelEventConnection",
    items:  Array< {
      __typename: "Event",
      clientAccountId: string,
      closingDate: string,
      createdAt: string,
      createdBy: string,
      description?: string | null,
      disabled?: boolean | null,
      eventId: string,
      location?: string | null,
      logoImageUrl: string,
      name: string,
      openingDate: string,
      readGroups?: Array< string | null > | null,
      updatedAt: string,
      updatedBy: string,
      websiteUrl?: string | null,
      writeGroups?: Array< string | null > | null,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type ListUsersQueryVariables = {
  filter?: ModelUserFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
  sortDirection?: ModelSortDirection | null,
  userId?: string | null,
};

export type ListUsersQuery = {
  listUsers?:  {
    __typename: "ModelUserConnection",
    items:  Array< {
      __typename: "User",
      clientAccountId: string,
      createdAt: string,
      createdBy: string,
      disabled?: boolean | null,
      email: string,
      familyName: string,
      givenName: string,
      jobTitle: string,
      mobilePhone: string,
      mobilePhoneCountryCode: string,
      owner: string,
      updatedAt: string,
      updatedBy: string,
      userId: string,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type CreateAccountMutationVariables = {
  annualEventCount: string,
  averageEventAttendance: string,
  companyName: string,
  currencyCode: string,
  debugLogging?: boolean | null,
  email: string,
  familyName: string,
  givenName: string,
  industry: string,
  jobTitle: string,
  mobilePhone: string,
  mobilePhoneCountryCode: string,
  userId: string,
};

export type CreateAccountMutation = {
  CreateAccount: string,
};

export type CreateCampaignMutationVariables = {
  condition?: ModelCampaignConditionInput | null,
  input: CreateCampaignInput,
};

export type CreateCampaignMutation = {
  createCampaign?:  {
    __typename: "Campaign",
    campaignId: string,
    campaignStatus?: CampaignCampaignStatus | null,
    clientAccountId: string,
    confirmationPageUrl?: string | null,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    event?:  {
      __typename: "Event",
      clientAccountId: string,
      closingDate: string,
      createdAt: string,
      createdBy: string,
      description?: string | null,
      disabled?: boolean | null,
      eventId: string,
      location?: string | null,
      logoImageUrl: string,
      name: string,
      openingDate: string,
      readGroups?: Array< string | null > | null,
      updatedAt: string,
      updatedBy: string,
      websiteUrl?: string | null,
      writeGroups?: Array< string | null > | null,
    } | null,
    eventId: string,
    modalButtonText?: string | null,
    modalDomainPath?: string | null,
    modalIncentiveTCs?: string | null,
    modalIncentiveText?: string | null,
    modalPattern?: string | null,
    modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
    modalText?: string | null,
    modalTitle?: string | null,
    name?: string | null,
    postForwardUrl?: string | null,
    postImageUrl?: string | null,
    postText?: string | null,
    readGroups?: Array< string | null > | null,
    registrationPageUrl?: string | null,
    targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
    updatedAt: string,
    updatedBy: string,
    valueOfAcquisition?: number | null,
    valueOfClick?: number | null,
    valueOfPost?: number | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type CreateClientAccountMutationVariables = {
  condition?: ModelClientAccountConditionInput | null,
  input: CreateClientAccountInput,
};

export type CreateClientAccountMutation = {
  createClientAccount?:  {
    __typename: "ClientAccount",
    address1?: string | null,
    address2?: string | null,
    annualEventCount: string,
    averageEventAttendance: string,
    city?: string | null,
    clientAccountId: string,
    companyName: string,
    country?: string | null,
    createdAt: string,
    createdBy: string,
    currencyCode: string,
    disabled?: boolean | null,
    events?:  {
      __typename: "ModelEventConnection",
      nextToken?: string | null,
    } | null,
    industry: string,
    licenseKey?: string | null,
    licenseKeyValidUntil?: string | null,
    readGroups?: Array< string | null > | null,
    state?: string | null,
    updatedAt: string,
    updatedBy: string,
    users?:  {
      __typename: "ModelUserConnection",
      nextToken?: string | null,
    } | null,
    writeGroups?: Array< string | null > | null,
    zip?: string | null,
  } | null,
};

export type CreateErrorLogMutationVariables = {
  condition?: ModelErrorLogConditionInput | null,
  input: CreateErrorLogInput,
};

export type CreateErrorLogMutation = {
  createErrorLog?:  {
    __typename: "ErrorLog",
    awsRequestId?: string | null,
    campaignId?: string | null,
    clientAccountId?: string | null,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    errorLogId: string,
    errorMessage?: string | null,
    functionName?: string | null,
    metadata?: string | null,
    readGroups?: Array< string | null > | null,
    stack?: string | null,
    updatedAt: string,
    updatedBy: string,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type CreateEventMutationVariables = {
  condition?: ModelEventConditionInput | null,
  input: CreateEventInput,
};

export type CreateEventMutation = {
  createEvent?:  {
    __typename: "Event",
    campaigns?:  {
      __typename: "ModelCampaignConnection",
      nextToken?: string | null,
    } | null,
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    closingDate: string,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    eventId: string,
    location?: string | null,
    logoImageUrl: string,
    name: string,
    openingDate: string,
    readGroups?: Array< string | null > | null,
    updatedAt: string,
    updatedBy: string,
    websiteUrl?: string | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type CreateUserMutationVariables = {
  condition?: ModelUserConditionInput | null,
  input: CreateUserInput,
};

export type CreateUserMutation = {
  createUser?:  {
    __typename: "User",
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    email: string,
    familyName: string,
    givenName: string,
    jobTitle: string,
    mobilePhone: string,
    mobilePhoneCountryCode: string,
    owner: string,
    updatedAt: string,
    updatedBy: string,
    userId: string,
  } | null,
};

export type DeleteCampaignMutationVariables = {
  condition?: ModelCampaignConditionInput | null,
  input: DeleteCampaignInput,
};

export type DeleteCampaignMutation = {
  deleteCampaign?:  {
    __typename: "Campaign",
    campaignId: string,
    campaignStatus?: CampaignCampaignStatus | null,
    clientAccountId: string,
    confirmationPageUrl?: string | null,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    event?:  {
      __typename: "Event",
      clientAccountId: string,
      closingDate: string,
      createdAt: string,
      createdBy: string,
      description?: string | null,
      disabled?: boolean | null,
      eventId: string,
      location?: string | null,
      logoImageUrl: string,
      name: string,
      openingDate: string,
      readGroups?: Array< string | null > | null,
      updatedAt: string,
      updatedBy: string,
      websiteUrl?: string | null,
      writeGroups?: Array< string | null > | null,
    } | null,
    eventId: string,
    modalButtonText?: string | null,
    modalDomainPath?: string | null,
    modalIncentiveTCs?: string | null,
    modalIncentiveText?: string | null,
    modalPattern?: string | null,
    modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
    modalText?: string | null,
    modalTitle?: string | null,
    name?: string | null,
    postForwardUrl?: string | null,
    postImageUrl?: string | null,
    postText?: string | null,
    readGroups?: Array< string | null > | null,
    registrationPageUrl?: string | null,
    targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
    updatedAt: string,
    updatedBy: string,
    valueOfAcquisition?: number | null,
    valueOfClick?: number | null,
    valueOfPost?: number | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type DeleteClientAccountMutationVariables = {
  condition?: ModelClientAccountConditionInput | null,
  input: DeleteClientAccountInput,
};

export type DeleteClientAccountMutation = {
  deleteClientAccount?:  {
    __typename: "ClientAccount",
    address1?: string | null,
    address2?: string | null,
    annualEventCount: string,
    averageEventAttendance: string,
    city?: string | null,
    clientAccountId: string,
    companyName: string,
    country?: string | null,
    createdAt: string,
    createdBy: string,
    currencyCode: string,
    disabled?: boolean | null,
    events?:  {
      __typename: "ModelEventConnection",
      nextToken?: string | null,
    } | null,
    industry: string,
    licenseKey?: string | null,
    licenseKeyValidUntil?: string | null,
    readGroups?: Array< string | null > | null,
    state?: string | null,
    updatedAt: string,
    updatedBy: string,
    users?:  {
      __typename: "ModelUserConnection",
      nextToken?: string | null,
    } | null,
    writeGroups?: Array< string | null > | null,
    zip?: string | null,
  } | null,
};

export type DeleteErrorLogMutationVariables = {
  condition?: ModelErrorLogConditionInput | null,
  input: DeleteErrorLogInput,
};

export type DeleteErrorLogMutation = {
  deleteErrorLog?:  {
    __typename: "ErrorLog",
    awsRequestId?: string | null,
    campaignId?: string | null,
    clientAccountId?: string | null,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    errorLogId: string,
    errorMessage?: string | null,
    functionName?: string | null,
    metadata?: string | null,
    readGroups?: Array< string | null > | null,
    stack?: string | null,
    updatedAt: string,
    updatedBy: string,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type DeleteEventMutationVariables = {
  condition?: ModelEventConditionInput | null,
  input: DeleteEventInput,
};

export type DeleteEventMutation = {
  deleteEvent?:  {
    __typename: "Event",
    campaigns?:  {
      __typename: "ModelCampaignConnection",
      nextToken?: string | null,
    } | null,
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    closingDate: string,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    eventId: string,
    location?: string | null,
    logoImageUrl: string,
    name: string,
    openingDate: string,
    readGroups?: Array< string | null > | null,
    updatedAt: string,
    updatedBy: string,
    websiteUrl?: string | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type DeleteUserMutationVariables = {
  condition?: ModelUserConditionInput | null,
  input: DeleteUserInput,
};

export type DeleteUserMutation = {
  deleteUser?:  {
    __typename: "User",
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    email: string,
    familyName: string,
    givenName: string,
    jobTitle: string,
    mobilePhone: string,
    mobilePhoneCountryCode: string,
    owner: string,
    updatedAt: string,
    updatedBy: string,
    userId: string,
  } | null,
};

export type UpdateCampaignMutationVariables = {
  condition?: ModelCampaignConditionInput | null,
  input: UpdateCampaignInput,
};

export type UpdateCampaignMutation = {
  updateCampaign?:  {
    __typename: "Campaign",
    campaignId: string,
    campaignStatus?: CampaignCampaignStatus | null,
    clientAccountId: string,
    confirmationPageUrl?: string | null,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    event?:  {
      __typename: "Event",
      clientAccountId: string,
      closingDate: string,
      createdAt: string,
      createdBy: string,
      description?: string | null,
      disabled?: boolean | null,
      eventId: string,
      location?: string | null,
      logoImageUrl: string,
      name: string,
      openingDate: string,
      readGroups?: Array< string | null > | null,
      updatedAt: string,
      updatedBy: string,
      websiteUrl?: string | null,
      writeGroups?: Array< string | null > | null,
    } | null,
    eventId: string,
    modalButtonText?: string | null,
    modalDomainPath?: string | null,
    modalIncentiveTCs?: string | null,
    modalIncentiveText?: string | null,
    modalPattern?: string | null,
    modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
    modalText?: string | null,
    modalTitle?: string | null,
    name?: string | null,
    postForwardUrl?: string | null,
    postImageUrl?: string | null,
    postText?: string | null,
    readGroups?: Array< string | null > | null,
    registrationPageUrl?: string | null,
    targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
    updatedAt: string,
    updatedBy: string,
    valueOfAcquisition?: number | null,
    valueOfClick?: number | null,
    valueOfPost?: number | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type UpdateClientAccountMutationVariables = {
  condition?: ModelClientAccountConditionInput | null,
  input: UpdateClientAccountInput,
};

export type UpdateClientAccountMutation = {
  updateClientAccount?:  {
    __typename: "ClientAccount",
    address1?: string | null,
    address2?: string | null,
    annualEventCount: string,
    averageEventAttendance: string,
    city?: string | null,
    clientAccountId: string,
    companyName: string,
    country?: string | null,
    createdAt: string,
    createdBy: string,
    currencyCode: string,
    disabled?: boolean | null,
    events?:  {
      __typename: "ModelEventConnection",
      nextToken?: string | null,
    } | null,
    industry: string,
    licenseKey?: string | null,
    licenseKeyValidUntil?: string | null,
    readGroups?: Array< string | null > | null,
    state?: string | null,
    updatedAt: string,
    updatedBy: string,
    users?:  {
      __typename: "ModelUserConnection",
      nextToken?: string | null,
    } | null,
    writeGroups?: Array< string | null > | null,
    zip?: string | null,
  } | null,
};

export type UpdateErrorLogMutationVariables = {
  condition?: ModelErrorLogConditionInput | null,
  input: UpdateErrorLogInput,
};

export type UpdateErrorLogMutation = {
  updateErrorLog?:  {
    __typename: "ErrorLog",
    awsRequestId?: string | null,
    campaignId?: string | null,
    clientAccountId?: string | null,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    errorLogId: string,
    errorMessage?: string | null,
    functionName?: string | null,
    metadata?: string | null,
    readGroups?: Array< string | null > | null,
    stack?: string | null,
    updatedAt: string,
    updatedBy: string,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type UpdateEventMutationVariables = {
  condition?: ModelEventConditionInput | null,
  input: UpdateEventInput,
};

export type UpdateEventMutation = {
  updateEvent?:  {
    __typename: "Event",
    campaigns?:  {
      __typename: "ModelCampaignConnection",
      nextToken?: string | null,
    } | null,
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    closingDate: string,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    eventId: string,
    location?: string | null,
    logoImageUrl: string,
    name: string,
    openingDate: string,
    readGroups?: Array< string | null > | null,
    updatedAt: string,
    updatedBy: string,
    websiteUrl?: string | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type UpdateUserMutationVariables = {
  condition?: ModelUserConditionInput | null,
  input: UpdateUserInput,
};

export type UpdateUserMutation = {
  updateUser?:  {
    __typename: "User",
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    email: string,
    familyName: string,
    givenName: string,
    jobTitle: string,
    mobilePhone: string,
    mobilePhoneCountryCode: string,
    owner: string,
    updatedAt: string,
    updatedBy: string,
    userId: string,
  } | null,
};

export type OnCreateCampaignSubscriptionVariables = {
  filter?: ModelSubscriptionCampaignFilterInput | null,
};

export type OnCreateCampaignSubscription = {
  onCreateCampaign?:  {
    __typename: "Campaign",
    campaignId: string,
    campaignStatus?: CampaignCampaignStatus | null,
    clientAccountId: string,
    confirmationPageUrl?: string | null,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    event?:  {
      __typename: "Event",
      clientAccountId: string,
      closingDate: string,
      createdAt: string,
      createdBy: string,
      description?: string | null,
      disabled?: boolean | null,
      eventId: string,
      location?: string | null,
      logoImageUrl: string,
      name: string,
      openingDate: string,
      readGroups?: Array< string | null > | null,
      updatedAt: string,
      updatedBy: string,
      websiteUrl?: string | null,
      writeGroups?: Array< string | null > | null,
    } | null,
    eventId: string,
    modalButtonText?: string | null,
    modalDomainPath?: string | null,
    modalIncentiveTCs?: string | null,
    modalIncentiveText?: string | null,
    modalPattern?: string | null,
    modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
    modalText?: string | null,
    modalTitle?: string | null,
    name?: string | null,
    postForwardUrl?: string | null,
    postImageUrl?: string | null,
    postText?: string | null,
    readGroups?: Array< string | null > | null,
    registrationPageUrl?: string | null,
    targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
    updatedAt: string,
    updatedBy: string,
    valueOfAcquisition?: number | null,
    valueOfClick?: number | null,
    valueOfPost?: number | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type OnCreateClientAccountSubscriptionVariables = {
  filter?: ModelSubscriptionClientAccountFilterInput | null,
};

export type OnCreateClientAccountSubscription = {
  onCreateClientAccount?:  {
    __typename: "ClientAccount",
    address1?: string | null,
    address2?: string | null,
    annualEventCount: string,
    averageEventAttendance: string,
    city?: string | null,
    clientAccountId: string,
    companyName: string,
    country?: string | null,
    createdAt: string,
    createdBy: string,
    currencyCode: string,
    disabled?: boolean | null,
    events?:  {
      __typename: "ModelEventConnection",
      nextToken?: string | null,
    } | null,
    industry: string,
    licenseKey?: string | null,
    licenseKeyValidUntil?: string | null,
    readGroups?: Array< string | null > | null,
    state?: string | null,
    updatedAt: string,
    updatedBy: string,
    users?:  {
      __typename: "ModelUserConnection",
      nextToken?: string | null,
    } | null,
    writeGroups?: Array< string | null > | null,
    zip?: string | null,
  } | null,
};

export type OnCreateErrorLogSubscriptionVariables = {
  filter?: ModelSubscriptionErrorLogFilterInput | null,
};

export type OnCreateErrorLogSubscription = {
  onCreateErrorLog?:  {
    __typename: "ErrorLog",
    awsRequestId?: string | null,
    campaignId?: string | null,
    clientAccountId?: string | null,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    errorLogId: string,
    errorMessage?: string | null,
    functionName?: string | null,
    metadata?: string | null,
    readGroups?: Array< string | null > | null,
    stack?: string | null,
    updatedAt: string,
    updatedBy: string,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type OnCreateEventSubscriptionVariables = {
  filter?: ModelSubscriptionEventFilterInput | null,
};

export type OnCreateEventSubscription = {
  onCreateEvent?:  {
    __typename: "Event",
    campaigns?:  {
      __typename: "ModelCampaignConnection",
      nextToken?: string | null,
    } | null,
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    closingDate: string,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    eventId: string,
    location?: string | null,
    logoImageUrl: string,
    name: string,
    openingDate: string,
    readGroups?: Array< string | null > | null,
    updatedAt: string,
    updatedBy: string,
    websiteUrl?: string | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type OnCreateUserSubscriptionVariables = {
  filter?: ModelSubscriptionUserFilterInput | null,
  owner?: string | null,
};

export type OnCreateUserSubscription = {
  onCreateUser?:  {
    __typename: "User",
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    email: string,
    familyName: string,
    givenName: string,
    jobTitle: string,
    mobilePhone: string,
    mobilePhoneCountryCode: string,
    owner: string,
    updatedAt: string,
    updatedBy: string,
    userId: string,
  } | null,
};

export type OnDeleteCampaignSubscriptionVariables = {
  filter?: ModelSubscriptionCampaignFilterInput | null,
};

export type OnDeleteCampaignSubscription = {
  onDeleteCampaign?:  {
    __typename: "Campaign",
    campaignId: string,
    campaignStatus?: CampaignCampaignStatus | null,
    clientAccountId: string,
    confirmationPageUrl?: string | null,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    event?:  {
      __typename: "Event",
      clientAccountId: string,
      closingDate: string,
      createdAt: string,
      createdBy: string,
      description?: string | null,
      disabled?: boolean | null,
      eventId: string,
      location?: string | null,
      logoImageUrl: string,
      name: string,
      openingDate: string,
      readGroups?: Array< string | null > | null,
      updatedAt: string,
      updatedBy: string,
      websiteUrl?: string | null,
      writeGroups?: Array< string | null > | null,
    } | null,
    eventId: string,
    modalButtonText?: string | null,
    modalDomainPath?: string | null,
    modalIncentiveTCs?: string | null,
    modalIncentiveText?: string | null,
    modalPattern?: string | null,
    modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
    modalText?: string | null,
    modalTitle?: string | null,
    name?: string | null,
    postForwardUrl?: string | null,
    postImageUrl?: string | null,
    postText?: string | null,
    readGroups?: Array< string | null > | null,
    registrationPageUrl?: string | null,
    targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
    updatedAt: string,
    updatedBy: string,
    valueOfAcquisition?: number | null,
    valueOfClick?: number | null,
    valueOfPost?: number | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type OnDeleteClientAccountSubscriptionVariables = {
  filter?: ModelSubscriptionClientAccountFilterInput | null,
};

export type OnDeleteClientAccountSubscription = {
  onDeleteClientAccount?:  {
    __typename: "ClientAccount",
    address1?: string | null,
    address2?: string | null,
    annualEventCount: string,
    averageEventAttendance: string,
    city?: string | null,
    clientAccountId: string,
    companyName: string,
    country?: string | null,
    createdAt: string,
    createdBy: string,
    currencyCode: string,
    disabled?: boolean | null,
    events?:  {
      __typename: "ModelEventConnection",
      nextToken?: string | null,
    } | null,
    industry: string,
    licenseKey?: string | null,
    licenseKeyValidUntil?: string | null,
    readGroups?: Array< string | null > | null,
    state?: string | null,
    updatedAt: string,
    updatedBy: string,
    users?:  {
      __typename: "ModelUserConnection",
      nextToken?: string | null,
    } | null,
    writeGroups?: Array< string | null > | null,
    zip?: string | null,
  } | null,
};

export type OnDeleteErrorLogSubscriptionVariables = {
  filter?: ModelSubscriptionErrorLogFilterInput | null,
};

export type OnDeleteErrorLogSubscription = {
  onDeleteErrorLog?:  {
    __typename: "ErrorLog",
    awsRequestId?: string | null,
    campaignId?: string | null,
    clientAccountId?: string | null,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    errorLogId: string,
    errorMessage?: string | null,
    functionName?: string | null,
    metadata?: string | null,
    readGroups?: Array< string | null > | null,
    stack?: string | null,
    updatedAt: string,
    updatedBy: string,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type OnDeleteEventSubscriptionVariables = {
  filter?: ModelSubscriptionEventFilterInput | null,
};

export type OnDeleteEventSubscription = {
  onDeleteEvent?:  {
    __typename: "Event",
    campaigns?:  {
      __typename: "ModelCampaignConnection",
      nextToken?: string | null,
    } | null,
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    closingDate: string,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    eventId: string,
    location?: string | null,
    logoImageUrl: string,
    name: string,
    openingDate: string,
    readGroups?: Array< string | null > | null,
    updatedAt: string,
    updatedBy: string,
    websiteUrl?: string | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type OnDeleteUserSubscriptionVariables = {
  filter?: ModelSubscriptionUserFilterInput | null,
  owner?: string | null,
};

export type OnDeleteUserSubscription = {
  onDeleteUser?:  {
    __typename: "User",
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    email: string,
    familyName: string,
    givenName: string,
    jobTitle: string,
    mobilePhone: string,
    mobilePhoneCountryCode: string,
    owner: string,
    updatedAt: string,
    updatedBy: string,
    userId: string,
  } | null,
};

export type OnUpdateCampaignSubscriptionVariables = {
  filter?: ModelSubscriptionCampaignFilterInput | null,
};

export type OnUpdateCampaignSubscription = {
  onUpdateCampaign?:  {
    __typename: "Campaign",
    campaignId: string,
    campaignStatus?: CampaignCampaignStatus | null,
    clientAccountId: string,
    confirmationPageUrl?: string | null,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    event?:  {
      __typename: "Event",
      clientAccountId: string,
      closingDate: string,
      createdAt: string,
      createdBy: string,
      description?: string | null,
      disabled?: boolean | null,
      eventId: string,
      location?: string | null,
      logoImageUrl: string,
      name: string,
      openingDate: string,
      readGroups?: Array< string | null > | null,
      updatedAt: string,
      updatedBy: string,
      websiteUrl?: string | null,
      writeGroups?: Array< string | null > | null,
    } | null,
    eventId: string,
    modalButtonText?: string | null,
    modalDomainPath?: string | null,
    modalIncentiveTCs?: string | null,
    modalIncentiveText?: string | null,
    modalPattern?: string | null,
    modalPatternLocationEnum?: CampaignModalPatternLocationEnum | null,
    modalText?: string | null,
    modalTitle?: string | null,
    name?: string | null,
    postForwardUrl?: string | null,
    postImageUrl?: string | null,
    postText?: string | null,
    readGroups?: Array< string | null > | null,
    registrationPageUrl?: string | null,
    targetInfluencerTypeEnum?: CampaignTargetInfluencerTypeEnum | null,
    updatedAt: string,
    updatedBy: string,
    valueOfAcquisition?: number | null,
    valueOfClick?: number | null,
    valueOfPost?: number | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type OnUpdateClientAccountSubscriptionVariables = {
  filter?: ModelSubscriptionClientAccountFilterInput | null,
};

export type OnUpdateClientAccountSubscription = {
  onUpdateClientAccount?:  {
    __typename: "ClientAccount",
    address1?: string | null,
    address2?: string | null,
    annualEventCount: string,
    averageEventAttendance: string,
    city?: string | null,
    clientAccountId: string,
    companyName: string,
    country?: string | null,
    createdAt: string,
    createdBy: string,
    currencyCode: string,
    disabled?: boolean | null,
    events?:  {
      __typename: "ModelEventConnection",
      nextToken?: string | null,
    } | null,
    industry: string,
    licenseKey?: string | null,
    licenseKeyValidUntil?: string | null,
    readGroups?: Array< string | null > | null,
    state?: string | null,
    updatedAt: string,
    updatedBy: string,
    users?:  {
      __typename: "ModelUserConnection",
      nextToken?: string | null,
    } | null,
    writeGroups?: Array< string | null > | null,
    zip?: string | null,
  } | null,
};

export type OnUpdateErrorLogSubscriptionVariables = {
  filter?: ModelSubscriptionErrorLogFilterInput | null,
};

export type OnUpdateErrorLogSubscription = {
  onUpdateErrorLog?:  {
    __typename: "ErrorLog",
    awsRequestId?: string | null,
    campaignId?: string | null,
    clientAccountId?: string | null,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    errorLogId: string,
    errorMessage?: string | null,
    functionName?: string | null,
    metadata?: string | null,
    readGroups?: Array< string | null > | null,
    stack?: string | null,
    updatedAt: string,
    updatedBy: string,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type OnUpdateEventSubscriptionVariables = {
  filter?: ModelSubscriptionEventFilterInput | null,
};

export type OnUpdateEventSubscription = {
  onUpdateEvent?:  {
    __typename: "Event",
    campaigns?:  {
      __typename: "ModelCampaignConnection",
      nextToken?: string | null,
    } | null,
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    closingDate: string,
    createdAt: string,
    createdBy: string,
    description?: string | null,
    disabled?: boolean | null,
    eventId: string,
    location?: string | null,
    logoImageUrl: string,
    name: string,
    openingDate: string,
    readGroups?: Array< string | null > | null,
    updatedAt: string,
    updatedBy: string,
    websiteUrl?: string | null,
    writeGroups?: Array< string | null > | null,
  } | null,
};

export type OnUpdateUserSubscriptionVariables = {
  filter?: ModelSubscriptionUserFilterInput | null,
  owner?: string | null,
};

export type OnUpdateUserSubscription = {
  onUpdateUser?:  {
    __typename: "User",
    clientAccount?:  {
      __typename: "ClientAccount",
      address1?: string | null,
      address2?: string | null,
      annualEventCount: string,
      averageEventAttendance: string,
      city?: string | null,
      clientAccountId: string,
      companyName: string,
      country?: string | null,
      createdAt: string,
      createdBy: string,
      currencyCode: string,
      disabled?: boolean | null,
      industry: string,
      licenseKey?: string | null,
      licenseKeyValidUntil?: string | null,
      readGroups?: Array< string | null > | null,
      state?: string | null,
      updatedAt: string,
      updatedBy: string,
      writeGroups?: Array< string | null > | null,
      zip?: string | null,
    } | null,
    clientAccountId: string,
    createdAt: string,
    createdBy: string,
    disabled?: boolean | null,
    email: string,
    familyName: string,
    givenName: string,
    jobTitle: string,
    mobilePhone: string,
    mobilePhoneCountryCode: string,
    owner: string,
    updatedAt: string,
    updatedBy: string,
    userId: string,
  } | null,
};
